/**
 * Frontend Styles
 */
@import "./variables";

// Row
//
// Rows contain and clear the floats of your columns.
.ghostkit-grid-inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: var(--gkt-grid__justify-content);
        -ms-flex-pack: var(--gkt-grid__justify-content);
            justify-content: var(--gkt-grid__justify-content);
    margin-top: calc(-1 * var(--gkt-grid__gap));
    margin-left: calc(-1 * var(--gkt-grid__gap));
}

// Fixes conflict with AWB backgrounds and gaps.
// @thanks https://github.com/nk-crew/ghostkit/issues/104
.ghostkit-grid,
.ghostkit-col {
    padding-top: .02px;
}

// Columns
//
// Common styles for small and large grid columns
// Common properties for all breakpoints
.ghostkit-col {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    // Fix for previous columns implementation without .ghostkit-col-content
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-ordinal-group: var(--gkt-grid--column__order);
        -ms-flex-order: var(--gkt-grid--column__order);
            order: var(--gkt-grid--column__order);
    width: 100%;
    max-width: 100%;
    min-height: 1px; // Prevent columns from collapsing when empty
    margin-top: var(--gkt-grid__gap);
    margin-left: var(--gkt-grid__gap);
}
.ghostkit-col-content {
    -ms-flex-item-align: var(--gkt-grid--column__align-self);
        align-self: var(--gkt-grid--column__align-self);
    width: 100%;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-down($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        // Provide basic `.col-{bp}` classes for equal-width flexbox columns
        .ghostkit-col#{$infix} {
            -webkit-box-flex: 1;
                -ms-flex: 1;
                    flex: 1;
            width: 100%;
            max-width: 100%;
        }

        // col size.
        @for $i from 1 through $grid-columns {
            .ghostkit-col#{$infix}-#{$i} {
                // We can't use complex CSS variables here
                // https://github.com/nk-crew/ghostkit/issues/103
                -ms-flex-preferred-size: calc(#{percentage($i / $grid-columns)} - var(--gkt-grid__gap));
                    flex-basis: calc(#{percentage($i / $grid-columns)} - var(--gkt-grid__gap));
                -ms-flex-negative: 0;
                    flex-shrink: 0;
                -webkit-box-flex: 0;
                    -ms-flex-positive: 0;
                        flex-grow: 0;
                width: calc(#{percentage($i / $grid-columns)} - var(--gkt-grid__gap));
                max-width: calc(#{percentage($i / $grid-columns)} - var(--gkt-grid__gap));
            }
        }

        // col order.
        .ghostkit-col-order#{$infix}-first {
            --gkt-grid--column__order: -1;
        }
        .ghostkit-col-order#{$infix}-last {
            --gkt-grid--column__order: #{$grid-columns + 1};
        }

        @for $i from 0 through $grid-columns {
            .ghostkit-col-order#{$infix}-#{$i} {
                --gkt-grid--column__order: #{$i};
            }
        }
    }
}

// Vertical align.
.ghostkit-grid-align-items-start {
    --gkt-grid--column__align-self: flex-start;
}
.ghostkit-grid-align-items-center {
    --gkt-grid--column__align-self: center;
}
.ghostkit-grid-align-items-end {
    --gkt-grid--column__align-self: flex-end;
}

// Vertical align column.
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-down($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .ghostkit-col-align-self#{$infix}-start {
            --gkt-grid--column__align-self: flex-start;
        }
        .ghostkit-col-align-self#{$infix}-center {
            --gkt-grid--column__align-self: center;
        }
        .ghostkit-col-align-self#{$infix}-end {
            --gkt-grid--column__align-self: flex-end;
        }
    }
}

// Horizontal align.
.ghostkit-grid-justify-content-center {
    --gkt-grid__justify-content: center;
}
.ghostkit-grid-justify-content-end {
    --gkt-grid__justify-content: flex-end;
}
.ghostkit-grid-justify-content-around {
    --gkt-grid__justify-content: space-around;
}
.ghostkit-grid-justify-content-between {
    --gkt-grid__justify-content: space-between;
}

// Gaps.
@each $name, $size in $grid-gaps {
    .ghostkit-grid-gap-#{$name} {
        --gkt-grid__gap: #{$size};
    }
}

// Columns Sticky.
.ghostkit-col-sticky-top > .ghostkit-col-content {
    position: -webkit-sticky;
    position: sticky;
    top: var(--gkt-grid--column-sticky__offset);
}
.ghostkit-col-sticky-bottom {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;

    > .ghostkit-col-content {
        position: -webkit-sticky;
        position: sticky;
        bottom: var(--gkt-grid--column-sticky__offset);
        margin-top: auto;
    }
}

// AWB backgrounds
.ghostkit-grid-with-bg,
.ghostkit-col-with-bg {
    position: relative;
    z-index: 0;

    > .nk-awb {
        &,
        .nk-awb-inner,
        .nk-awb-overlay,
        .nk-awb-wrap {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            margin: 0;
            z-index: -99;
        }
        .nk-awb-wrap {
            overflow: hidden;
        }

        /* Fix for Safari */
        .nk-awb-overlay {
            z-index: 0;
        }

        /* Background sizes */
        .nk-awb-inner {
            background-repeat: no-repeat;
            background-position: 50% 50%;
            background-size: cover;
            z-index: -100;
        }
        [data-awb-image-background-size="contain"] > .nk-awb-inner {
            background-size: contain;
        }
        [data-awb-image-background-size="pattern"] > .nk-awb-inner {
            background-repeat: repeat;
            background-size: auto;
        }

        /* Image sizes */
        .nk-awb-inner > .jarallax-img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            /* support for plugin https://github.com/bfred-it/object-fit-images */
            font-family: "object-fit: cover;"; // stylelint-disable-line
            pointer-events: none;
            z-index: -100;
            -o-object-fit: cover;
               object-fit: cover;
        }
        [data-awb-image-background-size="contain"] > .nk-awb-inner > .jarallax-img {
            -o-object-fit: contain;
               object-fit: contain;

            /* support for plugin https://github.com/bfred-it/object-fit-images */
            font-family: "object-fit: contain;"; // stylelint-disable-line
        }
    }
}
